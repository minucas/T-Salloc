%!PS-Adobe-2.0 EPSF-2.0
%%Title: missCount.homo_L.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat May 16 00:08:45 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 302 230
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (missCount.homo_L.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (rehan)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat May 16 00:08:45 2015)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 230 lineto 50 230 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(arial) findfont 100 scalefont setfont
/arial findfont 100 scalefont setfont
/arial findfont 100 scalefont setfont
/arial findfont 100 scalefont setfont
/arial findfont 100 scalefont setfont
/arial findfont 100 scalefont setfont
/arial findfont 100 scalefont setfont
1.000 UL
LTb
430 320 M
63 0 V
4366 0 R
-63 0 V
370 320 M
( 0) Rshow
1.000 UL
LTb
430 671 M
63 0 V
4366 0 R
-63 0 V
370 671 M
( 5) Rshow
1.000 UL
LTb
430 1022 M
63 0 V
4366 0 R
-63 0 V
-4426 0 R
( 10) Rshow
1.000 UL
LTb
430 1373 M
63 0 V
4366 0 R
-63 0 V
-4426 0 R
( 15) Rshow
1.000 UL
LTb
430 1724 M
63 0 V
4366 0 R
-63 0 V
-4426 0 R
( 20) Rshow
1.000 UL
LTb
430 2075 M
63 0 V
4366 0 R
-63 0 V
-4426 0 R
( 25) Rshow
1.000 UL
LTb
430 2426 M
63 0 V
4366 0 R
-63 0 V
-4426 0 R
( 30) Rshow
1.000 UL
LTb
430 2777 M
63 0 V
4366 0 R
-63 0 V
-4426 0 R
( 35) Rshow
1.000 UL
LTb
430 3128 M
63 0 V
4366 0 R
-63 0 V
-4426 0 R
( 40) Rshow
1.000 UL
LTb
430 3479 M
63 0 V
4366 0 R
-63 0 V
-4426 0 R
( 45) Rshow
1.000 UL
LTb
984 320 M
0 -100 R
(80) Cshow
1.000 UL
LTb
1537 320 M
0 -100 R
(90) Cshow
1.000 UL
LTb
2091 320 M
0 -100 R
(100) Cshow
1.000 UL
LTb
2645 320 M
0 -100 R
(110) Cshow
1.000 UL
LTb
3198 320 M
0 -100 R
(120) Cshow
1.000 UL
LTb
3752 320 M
0 -100 R
(130) Cshow
1.000 UL
LTb
4305 320 M
0 -100 R
(140) Cshow
1.000 UL
LTb
1.000 UL
LTb
430 3479 N
430 320 L
4429 0 V
0 3159 V
-4429 0 V
Z stroke
LCb setrgbcolor
80 1899 M
currentpoint gsave translate -270 rotate 0 0 M
(missCount.homo_L \(%\)) Cshow
grestore
LTb
LCb setrgbcolor
2644 70 M
(average system load \(%\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
490 2816 N
0 600 V
963 0 V
0 -600 V
-963 0 V
Z stroke
490 3416 M
963 0 V
% Begin plot #1
stroke
LT0
/arial findfont 100 scalefont setfont
LCb setrgbcolor
1030 3366 M
(EDF) Rshow
LT0
1.000 1090 3341 303 50 BoxColFill
LCb setrgbcolor
1090 3341 N
303 0 V
0 50 V
-303 0 V
0 -50 V
Z stroke
LT0
1.000 1854 320 80 424 BoxColFill
LCb setrgbcolor
1854 320 N
0 423 V
79 0 V
0 -423 V
-79 0 V
Z stroke
LT0
1.000 2407 320 80 1573 BoxColFill
LCb setrgbcolor
2407 320 N
0 1572 V
79 0 V
0 -1572 V
-79 0 V
Z stroke
LT0
1.000 2961 320 80 2139 BoxColFill
LCb setrgbcolor
2961 320 N
0 2138 V
79 0 V
0 -2138 V
-79 0 V
Z stroke
LT0
1.000 3514 320 81 2653 BoxColFill
LCb setrgbcolor
3514 320 N
0 2652 V
80 0 V
0 -2652 V
-80 0 V
Z stroke
LT0
1.000 4068 320 80 2938 BoxColFill
LCb setrgbcolor
4068 320 N
0 2937 V
79 0 V
0 -2937 V
-79 0 V
Z stroke
LT0
% End plot #1
% Begin plot #2
1.000 UL
LT1
/arial findfont 100 scalefont setfont
LCb setrgbcolor
1030 3266 M
(TSRA) Rshow
LT1
1.000 1090 3241 303 50 BoxColFill
LCb setrgbcolor
1090 3241 N
303 0 V
0 50 V
-303 0 V
0 -50 V
Z stroke
LT1
1.000 1933 320 80 421 BoxColFill
LCb setrgbcolor
1933 320 N
0 420 V
79 0 V
0 -420 V
-79 0 V
Z stroke
LT1
1.000 2486 320 80 1562 BoxColFill
LCb setrgbcolor
2486 320 N
0 1561 V
79 0 V
0 -1561 V
-79 0 V
Z stroke
LT1
1.000 3040 320 80 2170 BoxColFill
LCb setrgbcolor
3040 320 N
0 2169 V
79 0 V
0 -2169 V
-79 0 V
Z stroke
LT1
1.000 3594 320 80 2630 BoxColFill
LCb setrgbcolor
3594 320 N
0 2629 V
79 0 V
0 -2629 V
-79 0 V
Z stroke
LT1
1.000 4147 320 80 2903 BoxColFill
LCb setrgbcolor
4147 320 N
0 2902 V
79 0 V
0 -2902 V
-79 0 V
Z stroke
LT1
% End plot #2
% Begin plot #3
1.000 UL
LT2
/arial findfont 100 scalefont setfont
LCb setrgbcolor
1030 3166 M
(k-EDF=20%) Rshow
LT2
1.000 1090 3141 303 50 BoxColFill
LCb setrgbcolor
1090 3141 N
303 0 V
0 50 V
-303 0 V
0 -50 V
Z stroke
LT2
1.000 1458 320 80 5 BoxColFill
LCb setrgbcolor
1458 320 N
0 4 V
79 0 V
0 -4 V
-79 0 V
Z stroke
LT2
1.000 2012 320 80 370 BoxColFill
LCb setrgbcolor
2012 320 N
0 369 V
79 0 V
0 -369 V
-79 0 V
Z stroke
LT2
1.000 2565 320 81 1555 BoxColFill
LCb setrgbcolor
2565 320 N
0 1554 V
80 0 V
0 -1554 V
-80 0 V
Z stroke
LT2
1.000 3119 320 80 2105 BoxColFill
LCb setrgbcolor
3119 320 N
0 2104 V
79 0 V
0 -2104 V
-79 0 V
Z stroke
LT2
1.000 3673 320 80 2605 BoxColFill
LCb setrgbcolor
3673 320 N
0 2604 V
79 0 V
0 -2604 V
-79 0 V
Z stroke
LT2
1.000 4226 320 80 2914 BoxColFill
LCb setrgbcolor
4226 320 N
0 2913 V
79 0 V
0 -2913 V
-79 0 V
Z stroke
LT2
% End plot #3
% Begin plot #4
1.000 UL
LT3
/arial findfont 100 scalefont setfont
LCb setrgbcolor
1030 3066 M
(k-EDF=40%) Rshow
LT3
1.000 1090 3041 303 50 BoxColFill
LCb setrgbcolor
1090 3041 N
303 0 V
0 50 V
-303 0 V
0 -50 V
Z stroke
LT3
1.000 1537 320 80 23 BoxColFill
LCb setrgbcolor
1537 320 N
0 22 V
79 0 V
0 -22 V
-79 0 V
Z stroke
LT3
1.000 2091 320 80 207 BoxColFill
LCb setrgbcolor
2091 320 N
0 206 V
79 0 V
0 -206 V
-79 0 V
Z stroke
LT3
1.000 2645 320 80 525 BoxColFill
LCb setrgbcolor
2645 320 N
0 524 V
79 0 V
0 -524 V
-79 0 V
Z stroke
LT3
1.000 3198 320 80 782 BoxColFill
LCb setrgbcolor
3198 320 N
0 781 V
79 0 V
0 -781 V
-79 0 V
Z stroke
LT3
1.000 3752 320 80 1011 BoxColFill
LCb setrgbcolor
3752 320 N
0 1010 V
79 0 V
0 -1010 V
-79 0 V
Z stroke
LT3
1.000 4305 320 80 1278 BoxColFill
LCb setrgbcolor
4305 320 N
0 1277 V
79 0 V
0 -1277 V
-79 0 V
Z stroke
LT3
% End plot #4
% Begin plot #5
1.000 UL
LT4
/arial findfont 100 scalefont setfont
LCb setrgbcolor
1030 2966 M
(k-EDF=60%) Rshow
LT4
1.000 1090 2941 303 50 BoxColFill
LCb setrgbcolor
1090 2941 N
303 0 V
0 50 V
-303 0 V
0 -50 V
Z stroke
LT4
1.000 1616 320 80 23 BoxColFill
LCb setrgbcolor
1616 320 N
0 22 V
79 0 V
0 -22 V
-79 0 V
Z stroke
LT4
1.000 2170 320 80 207 BoxColFill
LCb setrgbcolor
2170 320 N
0 206 V
79 0 V
0 -206 V
-79 0 V
Z stroke
LT4
1.000 2724 320 80 529 BoxColFill
LCb setrgbcolor
2724 320 N
0 528 V
79 0 V
0 -528 V
-79 0 V
Z stroke
LT4
1.000 3277 320 80 777 BoxColFill
LCb setrgbcolor
3277 320 N
0 776 V
79 0 V
0 -776 V
-79 0 V
Z stroke
LT4
1.000 3831 320 80 1005 BoxColFill
LCb setrgbcolor
3831 320 N
0 1004 V
79 0 V
0 -1004 V
-79 0 V
Z stroke
LT4
1.000 4384 320 81 1171 BoxColFill
LCb setrgbcolor
4384 320 N
0 1170 V
80 0 V
0 -1170 V
-80 0 V
Z stroke
LT4
% End plot #5
% Begin plot #6
1.000 UL
LT5
/arial findfont 100 scalefont setfont
LCb setrgbcolor
1030 2866 M
(k-EDF=80%) Rshow
LT5
1.000 1090 2841 303 50 BoxColFill
LCb setrgbcolor
1090 2841 N
303 0 V
0 50 V
-303 0 V
0 -50 V
Z stroke
LT5
1.000 1695 320 81 23 BoxColFill
LCb setrgbcolor
1695 320 N
0 22 V
80 0 V
0 -22 V
-80 0 V
Z stroke
LT5
1.000 2249 320 80 207 BoxColFill
LCb setrgbcolor
2249 320 N
0 206 V
79 0 V
0 -206 V
-79 0 V
Z stroke
LT5
1.000 2803 320 80 529 BoxColFill
LCb setrgbcolor
2803 320 N
0 528 V
79 0 V
0 -528 V
-79 0 V
Z stroke
LT5
1.000 3356 320 80 777 BoxColFill
LCb setrgbcolor
3356 320 N
0 776 V
79 0 V
0 -776 V
-79 0 V
Z stroke
LT5
1.000 3910 320 80 1005 BoxColFill
LCb setrgbcolor
3910 320 N
0 1004 V
79 0 V
0 -1004 V
-79 0 V
Z stroke
LT5
1.000 4464 320 80 1171 BoxColFill
LCb setrgbcolor
4464 320 N
0 1170 V
79 0 V
0 -1170 V
-79 0 V
Z stroke
LT5
% End plot #6
1.000 UL
LTb
430 3479 N
430 320 L
4429 0 V
0 3159 V
-4429 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: arial
